# -*- coding: utf-8 -*-
"""projectAI

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ERNI16iQSd6XBsazWOPqcy9MNqQiomIo
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# import and Read Data 
from google.colab import drive
drive.mount('/content/gdrive')
dataset = pd.read_csv('gdrive/My Drive/AI/transfusionN.csv')

# display the first 5 rows of dataset..
print(dataset.head())

# X = features , y = target
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, 4].values

#split the data into train and test
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)

# feautures scaling
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(X_train)

X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

#training prediction
from sklearn.neighbors import KNeighborsClassifier
classifier = KNeighborsClassifier(n_neighbors=5)
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)


#evaliute the model
from sklearn.metrics import classification_report, confusion_matrix
print(confusion_matrix(y_test, y_pred),"\n")
print(classification_report(y_test, y_pred))


# Calculating error for K values between 1 and 40
error = []
for i in range(1, 40):
    knn = KNeighborsClassifier(n_neighbors=i)
    knn.fit(X_train, y_train)
    pred_i = knn.predict(X_test)
    error.append(np.mean(pred_i != y_test))

    plt.figure(figsize=(12, 6))
plt.plot(range(1, 40), error, color='red', linestyle='dashed', marker='o', markerfacecolor='blue', markersize=10)
plt.title('Error Rate K Value')
plt.xlabel('K Value')
plt.ylabel('Mean Error')